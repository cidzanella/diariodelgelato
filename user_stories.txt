USER STORIES
(lifecicle of the use stories are on the botton of this page)

As a {type of user}, I want {goal} so that I {receive benefit}
Other option:
As a(n) [user type]
In order to [extract business value]
When I [take some action]
  (and [take some other action])
Then I [observe an outcome]
  (and I [observe another outcome])

User Stories are supposed to be written in the following format:
As a <Role / User Category>
I want to <type what you want to achieve>
so that <why would you want to achieve>

As a traveler with family for vacation
I would like to block my seats together on the same row
So that I can enjoy the trip fully with my family and help my kids stay closer on flight

Questions to ask while writing user stories
Who is the user you are focusing on? This should be defined
What is the goal of the user in this story?
What should happen when the user is successful in their goal?
What should happen when the user isn’t successful in their goal?
What is the acceptance criteria for your user story?

[Story details]
User story additional information:
1.What steps need to be taken to accomplish this task
2.When the task is executed, what happens? What does the user see?
3.How will a developer know when the user story has been successfully accomplished?

[Acceptance criteria]
Writen in the Given/When/Then style
The given/when/then format follows the template: 
“Scenario: (explain scenario). 
Given (how things begin), when (action taken), then (outcome of taking action).”

Example:
You buy a car:

DoD (Definition of "Done"): car passes the official technical checks and tests and is qualified to hit the road.

Acceptance Criteria: the trunk size is above X liters, it can do at least Y MPG, has built-in Bluetooth headset and is red.

DoD in software development:
Code peer reviewed?
Code completed?
Code reviewed?
Code checked-in?
Unit tests passed?
Functional tests passed?
Acceptance tests completed?
Product Owner reviewed and accepted?

[User story with Acceptance Criteria sample]
User story: As a user, I want to be able to recover the password to my account, so that I will be able to access my account in case I forgot the password.

Acceptance Criteria:
Scenario: Forgot password
Given: The user navigates to the login page
When: The user selects <forgot password> option
And: Enters a valid email to receive a link for password recovery
Then: The system sends the link to the entered email
Given: The user receives the link via the email
When: The user navigates through the link received in the email
Then: The system enables the user to set a new password
https://www.altexsoft.com/blog/acceptance-criteria-purposes-formats-and-best-practices/

-- DIARIO DEL GELATO --

[atendente]
title: as a clerk, i can write gelato journal
as a clerk 
i want to register gelato weighting in and out of vetrina
so that i can write gelato journal

title: as a clerk, i can see gelato flavors list
i want a list of gelatos flavors 
so that i can select it instead of writing the flavour on gelato journal

title: as a clerk, i can register casquinha do dia
i want to register mine casquinha do dia weight 
so that i can put the information on gelato journal

title: as a clerk, i can get suggested starting vetrina 
as a clerk
i would like to know gelato cuba number that I should bring to the starting display
so that i could easily do this task easily

title: as a clerk, i can get replacing gelato suggestion
as a clerk i would like to get a suggestion of which gelato should bring to replace the one going out
so that i dont need to make that call

[cliente]
as a customer
i want to know the live gelato display flavours available
so that i can decide to visit the gelateria

[produtora]
as a gelato maker
i want to know gelato quantity per flavour
so that i can figure out the ones to produce

[gerente]
as a manager
i want to know gelato consumption
so that i can calculate daily monthly annualy gelato cost

as a manager
i want to know gelato sold in grams
so that i can calculate gelato consumption error (daily monthly annualy)

as a manager
i want to know gelato income
so that i can calculate the cost-to-income rate (cost/sales ratio)

as a manager
i want to eliminate manual gelato weighting
so that i can eliminate errors and speed up process

as a manager
i want to have an eletronic gelato diary
so that i can eliminated paper diary print and delivery task

as a manager
i want to be able do add and remove gelato flavour from the list
so that i can keep gelato list updated

as a manager 
i want to be able to verify gelato display flavours
so that i can check if it shows a well balanced offer to customers

as a manager 
i want to get an alert when the gelato offer is off-balance
so that i can ask for changes on gelato display flavours

as a manager
i want to have a web dashboard on the gelato journal information
so that i can access the information from anywhere mobile or pc

as a manager
i want the application to get sales information from Datacaixa
so that i dont have to manualy do this

as a manager
i want to keep track of gelato recipes, production itens and costs
so that i can figure out gelato cost per flavour

as a manager
i want to know the average gelato sales cost per day
so that i can control profit margin

as a manager 
i want to know gelato best selling flavour ordered list
so that i can better understand customers taste

as a manager
i want to know gelato cost per flavour ordered list
so that i can understand the ones with more impact on gelato cost

as a manager
i want to get as many alerts as possible from the data
so that it can be simple to trigger actions

[WHAT'S NEXT?]
Product Owner:

The Product Owner should then prioritize the stories. Maybe group them together into logical sets for a release plan.

The Team:

The development team goes through a process of grooming the stories. The team will ask the Product Owner questions about each story and get more information about what the story is trying to accomplish. The team will refine the acceptance criteria and provide a relative sizing. They may split the stories or break them into smaller stories so they can be done within a sprint. In another session the team may create sub-tasks for each story. At this point a story should be ready to start development

Sprint Planning:

The development team and the PO sit down together for sprint planning. The team figures out how much work they can take on during the sprint. They pull in stories one at a time from the backlog until they have filled their estimated time in the sprint. The team then should take another look at the full sprint plan and decide if it’s realistic and make any final adjustments. They then make a commitment on the work they will deliver for the sprint.

Sprint:

The development team writes the software for each story. They also test each one carefully ensuring it meets the acceptance criteria. They should also create repeatable and automated tests for each story whenever possible. As each story finishes they should notify the Product Owner and quickly review what’s done.

Sprint Review:

At sprint review the development team showcases/demonstrates their completed work to the Product Owner and other product stakeholders. The team also reviews other sprint progress and impediments to tell the story of what occurred over the sprint.

During the sprint the team will take some more time to groom more potential stories for the upcoming sprint. You have to have a pipeline of groomed stories for upcoming sprints so you don’t spend sprint planning time grooming stories.

Release:

The Product Owner will gather enough valuable completed stories after a few sprints and decide it’s time to give it to the world. Time to do a software release. You should do these often. The longer you wait to do a release the more work it tends to be to perform the release tasks.

Rinse and repeat until you have a product everyone loves or decide it’s not worthy and ditch it.

There’s lots more to the process after writing a story, but these are the highlights.

[LIFECILE]
Generally speaking, the lifecycle of a good user story looks something like this:

Initial Draft
This is the first “shot” at capturing the story - “As an [X], I want to [Y], so that I can [Z]”. Sometimes it takes some iteration to get this right.

Define Initial Acceptance Criteria
After we have the story, we can define the Acceptance Criteria - this may include some light UX design/wireframes, specific performance needs, or even use cases to demo at the Review.

Review Story w/ Stakeholders & Update if Needed
Too many people just drop stories on their team backlogs without any review with stakeholders. The best PMs know that this is an essential feedback step to ensure that the user story as written actually describes the desired solution.

Review and Size Story w/ Dev Team & Update if Needed
Once we’ve got the Story where the stakeholders want it, we need to make sure that it’s where the Dev team wants it too — and if it is, then we should be able to get a rough story point size on it.

Prioritize Story on Backlog
Priority requires that we understand both the business priority and the technical complexity of the story — without using both of these, we’re setting ourselves up for issues down the line.

Review Story During Grooming Sessions
If the story stays on the backlog for any meaningful amount of time, it’s likely to get “stale” and need to be reviewed and possibly re-estimated — that’s precisely what the grooming sessions are for.

Sprint Planning
Once it’s time to start, we’ll pull the story into a sprint during planning, making sure that we do a deeper dive than any prior efforts to ensure that the team fully understands what’s being asked of them and what they’re being expected to deliver.

Sprint Review
At the end of the sprint, review the user story with the PM and other stakeholders, and take notes to see what improvements might still need to be on the backlog.

Done